
// ---
// Cusomized Bootstrap Scaffolding Mixins
// ---


// ---
//
// Changes made by Lara:
// - Added "@if $gutter != 0" conditional to prevent overriding gutter padding
// - Changed pixel values to values defined in _settings.scss
// - Moved all styles into MQ
// - Created an @extend for static styles
// - Generate classes with a mixin
// - Not using those $screen-sm-min breakpoints
//
// ---


// ----
// ---- Screen sizes
// ----

$screen-sm:    34em;
$screen-md:    50em;
$screen-lg:    65em;

$contain-full: 55em;





// ----
// Grid Settings
// ----

$grid-columns:              7 !default;
//** Padding between columns. Gets divided in half for the left and right.
$gutter:                    $h3 !default;


// Add static grid styles into an extend
%bs-base {
    float: left;
    position: relative;
    min-height: 1px;
    width: 100%;
}

%bs-pad {
    padding-left:  ($gutter / 2);
    padding-right: ($gutter / 2);
}






// ----
// Containers
// ---

// Wrapper to contain internal columns.
// The negative margin accounts for the extra padding from nested columns


%container {
  margin-right: auto;
  margin-left: auto;
  padding-left: $gutter / 2;
  padding-right: $gutter / 2;
  max-width: $contain-full;
}

// To contain a primary section of content. 
// Max width of the widest inner wrap (below).
.contain {
  @extend %container;
  @extend %clearfix;
}





// ----
// Rows
// ----
// For wrapping nested columns

@mixin make-row($gutter: $gutter, $margin: true) {
    @if $margin == true {
        margin-left:  ($gutter / -2);
        margin-right: ($gutter / -2);      
    }
  
    @include clearfix();
}

.row {
    @include make-row();
}





// ----
// Grid Mixins
// ---


// Conditionally print the gutter

@mixin bs-gutter($gutter) {
    @if $gutter != false {
        padding-left:  ($gutter / 2);
        padding-right: ($gutter / 2);
    }
}



// Extra Small

@mixin make-xs-column($columns, $gutter: $gutter) {
  @extend %bs-base;
  @include bs-gutter($gutter);
  
  width: percentage(($columns / $grid-columns));
  min-height: 1px;
}
@mixin make-xs-column-offset($columns) {
  margin-left: percentage(($columns / $grid-columns));
}
@mixin make-xs-column-push($columns) {
  left: percentage(($columns / $grid-columns));
}
@mixin make-xs-column-pull($columns) {
  right: percentage(($columns / $grid-columns));
}



// Small

@mixin make-sm-column($columns, $gutter: $gutter) {
  @extend %bs-base;

  @media (min-width: $screen-sm) {
    @include bs-gutter($gutter);
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-offset($columns) {
  @media (min-width: $screen-sm) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-push($columns) {
  @media (min-width: $screen-sm) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-pull($columns) {
  @media (min-width: $screen-sm) {
    right: percentage(($columns / $grid-columns));
  }
}



// Medium

@mixin make-md-column($columns, $gutter: $gutter) {
  @extend %bs-base;

  @media (min-width: $screen-md) {
    @include bs-gutter($gutter);
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-offset($columns) {
  @media (min-width: $screen-md) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-push($columns) {
  @media (min-width: $screen-md) {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-pull($columns) {
  @media (min-width: $screen-md) {
    right: percentage(($columns / $grid-columns));
  }
}


// Large

@mixin make-lg-column($columns, $gutter: $gutter) {
  @extend %bs-base;

  @media (min-width: $screen-lg) {
    @include bs-gutter($gutter);
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-offset($columns) {
  @media (min-width: $screen-lg) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-push($columns) {
  @media (min-width: $screen-lg) {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-pull($columns) {
  @media (min-width: $screen-lg) {
    right: percentage(($columns / $grid-columns));
  }
}

.np {
  padding: 0;
}


// ----
// Generate Utility Classes
// ----

@for $i from 1 to $grid-columns {
    .col-xs-#{$i} { @include make-xs-column($i); }
    .col-xs-push-#{$i} { @include make-xs-column-push($i); }
    .col-xs-pull-#{$i} { @include make-xs-column-pull($i); }
    // .col-xs-#{$i}-offset { @include make-xs-column-offset($i); }
    .col-xs-#{$i}-np { @include make-xs-column($i, 0); }

}
@for $i from 1 to $grid-columns {
    .col-sm-#{$i} { @include make-sm-column($i); }
    .col-sm-push-#{$i} { @include make-sm-column-push($i); }
    .col-sm-pull-#{$i} { @include make-sm-column-pull($i); }
    .col-sm-offset-#{$i} { @include make-sm-column-offset($i); }
    .col-sm-#{$i}-np { @include make-sm-column($i, 0); }
}
@for $i from 1 to $grid-columns {
    .col-md-#{$i} { @include make-md-column($i); }
    .col-md-push-#{$i} { @include make-md-column-push($i); }
    .col-md-#{$i}-pull { @include make-md-column-pull($i); }
    .col-md-#{$i}-np { @include make-md-column($i, 0); }
    // .col-md-#{$i}-offset { @include make-md-column-offset($i); }
}
@for $i from 1 to $grid-columns {
    .col-lg-#{$i} { @include make-lg-column($i); }
    .col-lg-push-#{$i} { @include make-lg-column-push($i); }
    .col-lg-pull-#{$i} { @include make-lg-column-pull($i); }
    .col-lg-#{$i}-np { @include make-lg-column($i, 0); }

    .col-lg-offset-#{$i} { @include make-lg-column-offset($i); }
}



.inner {
    @include make-md-column(7);
    @include make-lg-column(5, false);
    @include make-lg-column-offset(1);
    // @include make-md-column-push(1);
}

.inner-full {
    // @include make-md-column(12);
    // @include inner(full);
}

.inner-squish {
    // @include inner(squish);
    @include make-md-column(5);
    @include make-md-column-offset(1);

    @include make-lg-column(4, false);
    @include make-lg-column-offset(1.5);
}

.inner-pad {
    @extend %bs-pad;
}

// .offset-l {
//     @include make-lg-column-offset(1.5);
//     padding-left: $gutter/2;
// }
